<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\Venta;
use App\Models\Receipt;
use Carbon\Carbon;

class CreateReceiptsForSpecificSales extends Command
{
    protected $signature = 'receipts:create-for-specific-sales';
    protected $description = 'Create receipts for 98 specific sales';

    public function __construct()
    {
        parent::__construct();
    }

    public function handle()
    {
        // Coloca aquí los IDs de los 98 registros específicos
        $specificSalesIds = [
            '1',
'2',
'8',
'12',
'13',
'31',
'33',
'36',
'40',
'44',
'47',
'53',
'57',
'59',
'65',
'66',
'68',
'69',
'80',
'82',
'85',
'97',
'102',
'104',
'107',
'111',
'113',
'117',
'120',
'127',
'137',
'141',
'142',
'143',
'149',
'152',
'157',
'170',
'172',
'175',
'178',
'181',
'186',
'195',
'196',
'199',
'213',
'215',
'223',
'225',
'228',
'231',
'242',
'251',
'255',
'259',
'272',
'286',
'310',
'360',
'367',
'368',
'397',
'408',
'431',
'485',
'539',
'590',
'597',
'635',
'676',
'723',
'734',
'741',
'765',
'767',
'773',
'933',
'939',
'969',
'1056',
'1073',
'1074',
'1101',
'1108',
'1110',
'1120',
'1130',
'1136',
'1138',
'1239',
'1272',
'1276',
'1287',
'1290',
'1304',
'2712',
'4673',
'4680',
'7457',
'9060',
'8341',
'8345',
'8392',
'8394',
'8411',
'8485',
'8486',
'8512',
'8529',
'8608',
'8610',
'8727',
'8730',
'8735',
'8744',
'8796',
'8808',
'8821',
'8823',
'8825',
'8842',
'8866',
'8868',
'8871',
'8873',
'8874',
'8875',
'8901',
'8914',
'8916',
'8925',
'8928',
'8931',
'8937',
'8941',
'8960',
'8986',
'8995',
'8996',
'9003',
'9007',
'9028',
'9052',
'2929',
'2939',
'2948',
'2965',
'2970',
'2974',
'2985',
'2988',
'3002',
'3013',
'7461',
'7599',
'7641',
'7688',
'7723',
'7731',
'7746',
'7773',
'7841',
'7849',
'7856',
'7865',
'7874',
'7885',
'7913',
'7928',
'7949',
'7975',
'7988',
'7997',
'8016',
'8047',
'8131',
'8275',
'1706',
'1711',
'1731',
'1738',
'1742',
'1751',
'1755',
'1780',
'1783',
'1805',
'1815',
'1818',
'1839',
'1841',
'1848',
'1850',
'1855',
'1860',
'1870',
'1884',
'1893',
'1895',
'1897',
'1921',
'1924',
'1940',
'1984',
'2008',
'2050',
'2065',
'2109',
'2163',
'2177',
'2181',
'2288',
'2309',
'2439',
'2533',
'2734',
'2796',
'2799',
'2818',
'2831',
'2904',
'150',
'162',
'197',
'226',
'232',
'352',
'411',
'465',
'479',
'483',
'611',
'1036',
'1098',
'1133',
'1206',
'1231',
'1241',
'1250',
'1267',
'1315',
'9164',
'645',
'7106',
'964',
'935',
'988',
'6613',
'921',
'466',
'817',
'7068',
'613',
'496',
'421',
'2012',
'563',
'6442',
'553',
'729',
'6423',
'7125',
'7349',
'8366',
'8415',
'8418',
'8457',
'8483',
'8500',
'8504',
'8505',
'8540',
'8583',
'8593',
'8627',
'8634',
'8642',
'8669',
'8688',
'8782',
'8800',
'8865',
'9015',
'9041',
'9051',
'1557',
'7501',
'7520',
'7528',
'7530',
'7639',
'1481',
'7662',
'7666',
'1476',
'7696',
'7704',
'1480',
'7712',
'7729',
'7732',
'7738',
'7739',
'7744',
'7761',
'7772',
'7778',
'7783',
'7897',
'7901',
'7908',
'7911',
'7932',
'7946',
'7992',
'8036',
'8037',
'8043',
'8044',
'8048',
'8067',
'8086',
'8101',
'8117',
'8126',
'8132',
'8136',
'8137',
'8142',
'1549',
'7353',
'6238',
'9582',
'9583',
'9584',
'9585',
'9586',
'9587',
'9588',
'9589',
'9590',
'9591',
'9592',
'9593',
'9594',
'9595',
'9596',
'9597',
'9598',
'9599',
'9600',
'9601',
'9602',
'9603',
'9604',
'9605',
'9606',
'9607',
'9608',
'9609',
'9610',
'9611',
'9612',
'9613',
'9614',
'9615',
'9616',
'9617',
'9618',
'9619',
'9620',
'9621',
'9622',
'9623',
'9624',
'9625',
'9626',
'9627',
'9628',
'9629',
'9630',
'9631',
'9632',
'9633',
'9634',
'9635',
'9636',
'9637',
'9638',
'9639',
'9640',
'9641',
'9642',
'9643',
'9644',
'9645',
'9646',
'9647',
'9648',
'9649',
'9650',
'9651',
'9652',
'9653',
'9654',
'9655',
'9656',
'9657',
'9658',
'9659',
'9660',
'9661',
'9662',
'9663',
'9664',
'9665',
'9666',
'9667',
'9668',
'9669',
'9670',
'9671',
'9672',
'9673',
'9674',
'9675',
'9676',
'9677',
'9678',
'9679',
'9680',
'9681',
'9682',
'9683',
'9684',
'9685',
'9686',
'9687',
'9688',
'9689',
'9690',
'9691',
'9692',
'9693',
'9694',
'9695',
'9696',
'9697',
'9698',
'9699',
'9700',
'9701',
'9702',
'9703',
'9704',
'9705',
'9706',
'9707',
'9708',
'9709',
'9710',
'9711',
'9712',
'9713',
'9714',
'9715',
'9716',
'9717',
'9718',
'9719',
'9720',
'9721',
'9722',
'9723',
'9724',
'9725',
'9726',
'9727',
'9728',
'9729',
'9730',
'9731',
'9732',
'9733',
'9734',
'9735',
'9736',
'9737',
'9738',
'9739',
'9740',
'9741',
'9742',
'9743',
'9744',
'9745',
'9746',
'9747',
'9748',
'9749',
'9750',
'9751',
'9752',
'9753',
'9754',
'9755',
'9756',
'9757',
'9758',
'9759',
'9760',
'9761',
'9762',
'9763',
'9764',
'9765',
'9766',
'9767',
'9768',
'9769',
'9770',
'9771',
'9772',
'9773',
'9774',
'9775',
'9776',
'9777',
'9778',
'9779',
'9780',
'9781',
'9782',
'9783',
'9784',
'9785',
'9786',
'9787',
'9788',
'9789',
'9790',
'9791',
'9792',
'9793',
'9794',
'9795',
'9796',
'9797',
'9798',
'9799',
'9800',
'9801',
'9802',
'9803',
'9804',
'9805',
'9806',
'9807',
'9808',
'9809',
'9810',
'9811',
'9812',
'9813',
'9814',
'9815',
'9816',
'9817',
'9818',
'9819',
'9820',
'9821',
'9822',
'9823',
'9824',
'9825',
'9826',
'9829',
'9830',
'9831',
'9833',
'9835',
'9836',
'9837',
'9839',
'9840',
'9841',
'9843',
'9844',
'9848',
'9849',
'9851',
'9852',
'9853',
'9855',
'9856',
'9857',
'9859',
'9860',
'9861',
'9864',
'9865',
'9867',
'9868',
'9869',
'9870',
'9871',
'9872',
'9874',
'9875',
'9876',
'9878',
'9879',
'9880',
'9882',
'9883',
'9885',
'9886',
'9887',
'9888',
'9889',
'9890',
'9891',
'9892',
'9893',
'9894',
'9896',
'9897',
'9898',
'9900',
'9901',
'9903',
'9904',
'9905',
'9906',
'9907',
'9910',
'9911',
'9913',
'9915',
'9917',
'9918',
'9919',
'9920',
'9921',
'9922',
'9923',
'9924',
'9926',
'9927',
'9928',
'9929',
'9930',
'9931',
'9932',
'9933',
'9934',
'9935',
'9937',
'9938',
'9939',
'9940',
'9941',
'9942',
'9943',
'9944',
'9945',
'9946',
'9947',
'9948',
'9949',
'9950',
'9951',
'9952',
'9953',
'9955',
'9956',
'9957',
'9959',
'9960',
'9962',
'9963',
'9964',
'9965',
'9966',
'9967',
'9968',
'9973',
'9974',
'9975',
'9976',
'9977',
'9978',
'9979',
'9980',
'9981',
'9982',
'9983',
'9984',
'9985',
'9986',
'9987',
'9988',
'9989',
'9991',
'9994',
'9995',
'9996',
'9997',
'10000',
'10001',
'10002',
'10003',
'10004',
'10006',
'10007',
'10008',
'10009',
'10010',
'10012',
'10013',
'10014',
'10015',
'10016',
'10020',
'10021',
'10022',
'10023',
'10024',
'10025',
'10026',
'10027',
'10028',
'10029',
'10030',
'10033',
'10034',
'10035',
'10036',
'10038',
'10039',
'10040',
'10041',
'10042',
'10043',
'10044',
'10045',
'10047',
'10048',
'10049',
'10050',
'10051',
'10052',
'10053',
'10054',
'10056',
'10057',
'10058',
'10059',
'10060',
'10061',
'10062',
'10063',
'10065',
'10066',
'10067',
'10068',
'10069',
'10070',
'10072',
'10073',
'10074',
'10075',
'10076',
'10077',
'10078',
'10079',
'10080',
'10081',
'10082',
'10083',
'10084',
'10085',
'10086',
'10087',
'10088',
'10089',
'10090',
'10091',
'10092',
'10093',
'10094',
'10095',
'10096',
'10097',
'10098',
'10099',
'10100',
'10101',
'10102',
'10103',
'10104',
'10105',
'10106',
'10107',
'10108',
'10109',
'10110',
'10111',
'10112',
'10113',
'10114',
'10115',
'10116',
'10117',
'10118',
'10119',
'10120',
'10121',
'10122',
'10123',
'10124',
'10125',
'10126',
'10127',
'10128',
'10129',
'10130',
'10131',
'10132',
'10133',
'10134',
'10135',
'10136',
'10137',
'10138',
'10139',
'10140',
'10141',
'10142',
'10143',
'10144',
'10145',
'10146',
'10147',
'10148',
'10149',
'10150',
'10151',
'10152',
'10153',
'10154',
'10155',
'10156',
'10157',
'10158',
'10159',
'10160',
'10161',
'10162',
'10163',
'10164',
'10165',
'10166',
'10167',
'10168',
'10169',
'10170',
'10171',
'10172',
'10173',
'10174',
'10175',
'10176',
'10177',
'10178',
'10179',
'10180',
'10181',
'10182',
'10183',
'10184',
'10185',
'10186',
'10187',
'10188',
'10189',
'10190',
'10191',
'10192',
'10193',
'10194',
'10195',
'10196',
'10197',
'10198',
'10199',
'10200',
'10201',
'10202',
'10203',
'10204',
'10205',
'10206',
'10207',
'10208',
'10209',
'10210',
'10211',
'10212',
'10213',
'10214',
'10215',
'10216',
'10217',
'10218',
'10219',
'10220',
'10221',
'10222',
'10223',
'10224',
'10225',
'10226',
'10227',
'10228',
'10229',
'10230',
'10231',
'10232',
'10233',
'10234',
'10235',
'10236',
'10237',
'10238',
'10239',
'10240',
'10241',
'10242',
'10243',
'10244',
'10245',
'10246',
'10247',
'10248',
'10249',
'10250',
'10251',
'10252',
'10253',
'10254',
'10255',
'10256',
'10257',
'10258',
'10259',
'10260',
'10261',
'10262',
'10263',
'10264',
'10265',
'10266',
'10267',
'10268',
'10269',
'10270',
'10271',
'10272',
'10273',
'10274',
'10275',
'10276',
'10277',
'10278',
'10279',
'10280',
'10281',
'10282',
'10283',
'10284',
'10285',
'10286',
'10287',
'10288',
'10289',
'10290',
'10291',
'10292',
'10293',
'10294',
'10295',
'10296',
'10297',
'10298',
'10299',
'10300',
'10301',
'10302',
'10303',
'10304',
'10305',
'10306',
'10307',
'10308',
'10309',
'10310',
'10311',
'10312',
'10313',
'10314',
'10315',
'10316',
'10317',
'10318',
'10319',
'10320',
'10321',
'10322',
'10323',
'10324',
'10325',
'10326',
'10327',
'10328',
'10329',
'10330',
'10331',
'10332',
'10333',
'10334',
'10335',
'10336',
'10337',
'10338',
'10339',
'9827',
'9828',
'9832',
'9834',
'9838',
'9845',
'9846',
'9847',
'9854',
'9858',
'9862',
'9863',
'9866',
'9881',
'9895',
'9899',
'9902',
'9909',
'9916',
'9936',
'9958',
'9969',
'9970',
'9971',
'9993',
'10011',
'10017',
'10018',
'10019',
'10032',
'10037',
'10055',
'10064',
'10071',
'9850',
'9877',
'9884',
'9908',
'9912',
'9914',
'9954',
'9961',
'9972',
'9990',
'9992',
'9998',
'9999',
'10005',
'10031',
'9842',
'9873',
'9925',
'1929',
'6866',
'691',
'6969',
'9482',
'420',
'710',
'2747',
'579',
'10345',
'601',
'639',
'7439',
'287',
'298',
'6447',
'7412',
'952',
'627',
'585',
'10365',
'6665',
'595',
'385',
'751',
'7452',
'664',
'10386',
'505',
'10381',
'732',
'7408',
'7432',
'7436',
'7426',
'7004',
'7451',
'568',
'7422',
'7319',
'10399',
'735',
'7288',
'6817',
'6449',
'6648',
'10406',
'7093',
'724',
'7320',
'7134',
'7405',
'7262',
'7415',
'7443',
'7368',
'7420',
'396',
'6176',
'6429',
'6972',
'6403',
'10416',
'7418',
'7402',
'10418',
'1309',
'6305',
'6857',
'7433',
'10420',
'7404',
'7359',
'7410',
'10424',
'6280',
'10430',
'7236',
'7303',
'7302',
'7383',
'718',
'7448',
'10453',
'10454',


        ];

        foreach ($specificSalesIds as $saleId) {
            $venta = Venta::with('agent')->where('id', $saleId)->first();
            // Mostramos el ID del agente para verificar que se esté ejecutando el comando correctamente

            if (!$venta) {
                $this->error("Venta con ContactID {$saleId} no encontrada.");
                continue;
            }

            // Verificamos si ya existen recibos de pago para la venta
            $recibos = Receipt::where('venta_id', $venta->id)->count();

            // Si no hay recibos existentes, crea nuevos recibos
            if ($recibos === 0) {
                // Creamos un arreglo con las frecuencias de pago
                $frecuenciaPagos = [
                    'ANUAL' => 1,
                    'SEMESTRAL' => 2,
                    'TRIMESTRAL' => 4,
                    'CUATRIMESTRAL' => 3,
                    'MENSUAL' => 12
                ];

                // Convertimos frecuenciaPago en Mayusculas
                $frecuenciaPago = strtoupper(trim($venta->FrePago));

                // Verificar si la frecuencia de pago es válida y quitamos espacios en blanco adelante y atrás
                if (!array_key_exists($frecuenciaPago, $frecuenciaPagos)) {
                    $this->error("Frecuencia de pago '{$frecuenciaPago}' inválida para la venta con ContactID {$saleId}");
                    continue;
                }
                
                $numRecibos = $frecuenciaPagos[$frecuenciaPago];
                $finVigencia = Carbon::parse($venta->FinVigencia);

                $primerReciboAnualAsignado = false;

                for ($i = 1; $i <= $numRecibos; $i++) {
                    $mesesPorRecibo = 12 / $numRecibos; // Cantidad de meses por recibo
                    $fechaProximoPago = $finVigencia->copy()->addMonthsNoOverflow($mesesPorRecibo * $i);

                    $fechaProximoPago = $i == 0 ? $finVigencia : $fechaProximoPago;

                    // Hago que el primer recibo se le asigne el agente que hizo la venta

                    $receipt = new Receipt([
                        'venta_id' => $venta->id,
                        'num_pago' => $i,
                        'fre_pago' => $venta->FrePago,
                        'fecha_proximo_pago' => $i > 1 ? $fechaProximoPago : $finVigencia,
                        'fecha_pago_real' => $venta->Fpreventa,
                        'prima_neta_cobrada' => $venta->PncTotal,
                        'agente_cob_id' => $i == 1 ? $venta->agent->id ?? null : null,
                        'tipo_pago' => $i == $numRecibos ? 'LIQUIDADO' : 'PAGO PARCIAL',
                        'estado_pago' => $i == 1 && $frecuenciaPago != 'ANUAL' && !$primerReciboAnualAsignado ? 'PAGADO' : 'PENDIENTE',
                        'contactId' => $venta->contactId,
                    ]);

                    // Después de asignar el estado de pago, para marcar el primer recibo anual como asignado
                    if ($i == 1 && $frecuenciaPago == 'ANUAL') {
                        $primerReciboAnualAsignado = true;
                    }

                    $receipt->save();
                }
            }

        }

        $this->info('Se han creado los recibos para las ventas específicas.');
    }
}
